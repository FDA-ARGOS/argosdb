{"ast":null,"code":"var _jsxFileName = \"/Users/rykahsay/projects/argosdb/app/src/components/dataset_page.jsx\";\nimport React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DatasetPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      dialog: {\n        status: false,\n        msg: \"\"\n      }\n    };\n\n    this.handleDialogClose = () => {\n      var tmpState = this.state;\n      tmpState.dialog.status = false;\n      this.setState(tmpState);\n    };\n  }\n\n  componentDidMount() {\n    var reqObj = {\n      coll: \"c_bco\",\n      bcoid: this.props.bcoId\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.get_one;\n    fetch(svcUrl, requestOptions).then(res => res.json()).then(result => {\n      var tmpState = this.state;\n      tmpState.response = result;\n      tmpState.isLoaded = true;\n\n      if (tmpState.response.status === 0) {\n        tmpState.dialog.status = true;\n        tmpState.dialog.msg = tmpState.response.error;\n      }\n\n      this.setState(tmpState); //console.log(\"Request:\",svcUrl);\n\n      console.log(\"Ajax response:\", result);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    if (!(\"response\" in this.state)) {\n      return /*#__PURE__*/_jsxDEV(Loadingicon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    }\n\n    const bcoObj = this.state.response.record !== undefined ? this.state.response.record : {};\n    bcoObj.sampleData = [[{\n      type: 'string',\n      label: 'A'\n    }, {\n      type: 'string',\n      label: 'B'\n    }, {\n      type: 'string',\n      label: 'C'\n    }], [\"Mike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\", \"ffaaMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\", \"dfafaMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\"]];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagecn\",\n      children: [/*#__PURE__*/_jsxDEV(Alertdialog, {\n        dialog: this.state.dialog,\n        onClose: this.handleDialogClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftblock\",\n        style: {\n          width: \"100%\",\n          margin: \"100px 0px 0px 0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [bcoObj.bcoid, \" sample view\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: bcoObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: bcoObj.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftblock\",\n        style: {\n          width: \"100%\",\n          overflow: \"auto\",\n          margin: \"40px 0px 0px 0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          width: '100%',\n          chartType: \"Table\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this),\n          data: bcoObj.sampleData,\n          options: {\n            showRowNumber: false\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DatasetPage;","map":{"version":3,"sources":["/Users/rykahsay/projects/argosdb/app/src/components/dataset_page.jsx"],"names":["React","Component","Alertdialog","Loadingicon","LocalConfig","Chart","DatasetPage","state","dialog","status","msg","handleDialogClose","tmpState","setState","componentDidMount","reqObj","coll","bcoid","props","bcoId","requestOptions","method","headers","body","JSON","stringify","svcUrl","apiHash","get_one","fetch","then","res","json","result","response","isLoaded","error","console","log","render","bcoObj","record","undefined","sampleData","type","label","width","margin","fontWeight","title","description","overflow","showRowNumber"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Chart } from \"react-google-charts\";\n\n\n\nclass DatasetPage extends Component {\n  \n  state = {\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n\n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    this.setState(tmpState);\n  }\n\n  componentDidMount() {\n    var reqObj = {coll:\"c_bco\", bcoid:this.props.bcoId};\n    const requestOptions = { \n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.get_one;\n\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.isLoaded = true;          \n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          this.setState(tmpState);\n          //console.log(\"Request:\",svcUrl);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  render() {\n\n    if (!(\"response\" in this.state)){\n      return <Loadingicon/>\n    }\n\n    const bcoObj = (this.state.response.record !== undefined ? this.state.response.record : {});\n    \n    bcoObj.sampleData = [\n      [\n        { type: 'string', label: 'A' },\n        { type: 'string', label: 'B' },\n        { type: 'string', label: 'C' },\n      ],\n      [\n        \"Mike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\", \n        \"ffaaMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\", \n        \"dfafaMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa faMike fdsf ffd ff fa fafasfa fa ffds fdsafafda fdafsdfa fafdafa fa\"\n      ]\n    ];\n    \n\n    return (\n      <div className=\"pagecn\">\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n\n        <div className=\"leftblock\" style={{width:\"100%\", margin:\"100px 0px 0px 0px\"}}>\n          <span>{bcoObj.bcoid} sample view</span><br/>\n          <span style={{fontWeight:\"bold\"}}>{bcoObj.title}</span><br/>\n          <span>{bcoObj.description}</span><br/>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"100%\", overflow:\"auto\", margin:\"40px 0px 0px 0px\"}}>\n          <Chart\n            width={'100%'}\n            chartType=\"Table\"\n            loader={<div>Loading Chart</div>}\n            data={bcoObj.sampleData}\n            options={{\n              showRowNumber: false,\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DatasetPage;\n"]},"metadata":{},"sourceType":"module"}